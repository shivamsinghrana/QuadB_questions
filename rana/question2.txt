use std::io;

fn first_occurrence(nums: &[i32], target: i32) -> Option<usize> {
    let mut left = 0;
    let mut right = nums.len();

    while left < right {
        let mid = left + (right - left) / 2;
        if nums[mid] < target {
            left = mid + 1;
        } else {
            right = mid;
        }
    }

    if left < nums.len() && nums[left] == target {
        Some(left)
    } else {
        None
    }
}

fn main() {
    println!("Enter the sorted array of integers separated by space:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let nums: Vec<i32> = input.trim().split_whitespace()
        .map(|s| s.parse().expect("Invalid number"))
        .collect();

    println!("Enter the target number:");
    let mut target_input = String::new();
    io::stdin().read_line(&mut target_input).expect("Failed to read line");
    let target: i32 = target_input.trim().parse().expect("Invalid number");

    match first_occurrence(&nums, target) {
        Some(index) => println!("The first occurrence of {} is at index {}", target, index),
        None => println!("{} does not exist in the array", target),
    }
}